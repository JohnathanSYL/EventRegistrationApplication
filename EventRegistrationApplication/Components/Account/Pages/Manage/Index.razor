@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using EventRegistrationApplication.Domain
@using Microsoft.AspNetCore.Identity
@using EventRegistrationApplication.Data

@inject UserManager<EventRegistrationApplicationUser> UserManager
@inject SignInManager<EventRegistrationApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />

<PageTitle>Profile</PageTitle>

<div class="container py-4">
    <div class="card shadow-sm border-0 rounded" style="background-color: #6f42c1;">
        <div class="card-header text-white text-center rounded-top" style="background-color: #6f42c1;">
            <h3 class="mb-0">Manage Profile</h3>
        </div>
        <div class="card-body p-4 rounded-bottom" style="background-color: #f4f4f4;">
            <StatusMessage />
            <EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post" class="needs-validation">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />

                <!-- Username Field with Icon -->
                <div class="mb-3">
                    <label for="username" class="form-label fw-bold">
                        <i class="fas fa-user me-2"></i>Username
                    </label>
                    <input type="text" value="@username" class="form-control rounded" placeholder="Your username" disabled />
                </div>

                <!-- Phone Number Field with Icon -->
                <div class="mb-3">
                    <label for="phone-number" class="form-label fw-bold">
                        <i class="fas fa-phone-alt me-2"></i>Phone Number
                    </label>
                    <InputText @bind-Value="Input.PhoneNumber" class="form-control rounded" placeholder="Enter your phone number" />
                    <ValidationMessage For="() => Input.PhoneNumber" class="text-danger" />
                </div>

                <!-- Save Button with Icon and Purple Color -->
                <button type="submit" class="btn w-100 py-2 rounded" style="background-color: #6f42c1; color: white;">
                    <i class="fas fa-save me-2"></i>Save Changes
                </button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private EventRegistrationApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);
        phoneNumber = await UserManager.GetPhoneNumberAsync(user);

        Input.PhoneNumber ??= phoneNumber;
    }

    private async Task OnValidSubmitAsync()
    {
        if (Input.PhoneNumber != phoneNumber)
        {
            var setPhoneResult = await UserManager.SetPhoneNumberAsync(user, Input.PhoneNumber);
            if (!setPhoneResult.Succeeded)
            {
                RedirectManager.RedirectToCurrentPageWithStatus("Error: Failed to set phone number.", HttpContext);
            }
        }

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus("Your profile has been updated", HttpContext);
    }

    private sealed class InputModel
    {
        [Phone]
        [Display(Name = "Phone number")]
        public string? PhoneNumber { get; set; }
    }
}
