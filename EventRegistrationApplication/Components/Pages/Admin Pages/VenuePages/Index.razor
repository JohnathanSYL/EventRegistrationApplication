@page "/venues"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using EventRegistrationApplication.Domain
@using EventRegistrationApplication.Data
@implements IAsyncDisposable
@inject IDbContextFactory<EventRegistrationApplication.Data.EventRegistrationApplicationContext> DbFactory

<PageTitle>Venues</PageTitle>

<div class="container mt-4">
    <h1 class="mb-4">Venues</h1>

    <p>
        <a class="btn btn-primary" href="venues/create">Create New</a>
    </p>

    @if (context.Venue.Any())
    {
        <div class="row">
            @foreach (var venue in context.Venue)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@venue.VenueName</h5>
                            <p class="card-text">
                                <strong>Location:</strong> @venue.Location <br />
                                <strong>Capacity:</strong>
                                <span class="badge @(venue.Capacity >= 100 ? "bg-success" : "bg-warning")">
                                    @venue.Capacity
                                </span>
                            </p>
                            <p class="card-text">
                                <small><em>Created on @venue.DateCreated.ToString("MMMM dd, yyyy")</em></small>
                            </p>
                            <p class="card-text">
                                <small><em>Updated on @venue.DateUpdated.ToString("MMMM dd, yyyy")</em></small>
                            </p>
                            <div class="d-flex flex-column gap-2">
                                <a href="@($"venues/edit?venueid={venue.VenueId}")" class="btn btn-lg btn-info w-100 mb-2">Edit</a>
                                <a href="@($"venues/details?venueid={venue.VenueId}")" class="btn btn-lg btn-secondary w-100 mb-2">Details</a>
                                <a href="@($"venues/delete?venueid={venue.VenueId}")" class="btn btn-lg btn-danger w-100 mb-2">Delete</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-warning">
            <strong>No venues available!</strong> Please add some venues to the system.
        </div>
    }
</div>

@code {
    private EventRegistrationApplicationContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
