@page "/eventmodels"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using EventRegistrationApplication.Domain
@using EventRegistrationApplication.Data
@implements IAsyncDisposable
@inject IDbContextFactory<EventRegistrationApplication.Data.EventRegistrationApplicationContext> DbFactory
@rendermode InteractiveServer

<PageTitle>Event Models</PageTitle>

<h1 class="text-center text-primary mb-4">Event Models</h1>

<p class="mb-4">
    <a href="eventmodels/create" class="btn btn-success rounded-pill">Create New Event Model</a>
</p>

<QuickGrid Class="table table-striped table-hover shadow-lg rounded" Items="context.EventModel" Pagination="paginationState">
    <PropertyColumn Property="eventmodel => eventmodel.EventName" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">Event Name</span>
        </HeaderTemplate>
    </PropertyColumn>
    <PropertyColumn Property="eventmodel => eventmodel.Date" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">Date</span>
        </HeaderTemplate>
    </PropertyColumn>
    <PropertyColumn Property="eventmodel => eventmodel.Location" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">Location</span>
        </HeaderTemplate>
    </PropertyColumn>
    <PropertyColumn Property="eventmodel => eventmodel.Description" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">Description</span>
        </HeaderTemplate>
    </PropertyColumn>
    <PropertyColumn Property="eventmodel => eventmodel.VenueId" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">Venue ID</span>
        </HeaderTemplate>
    </PropertyColumn>
    <PropertyColumn Property="eventmodel => eventmodel.CategoryId" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">Category ID</span>
        </HeaderTemplate>
    </PropertyColumn>
    <PropertyColumn Property="eventmodel => eventmodel.StatusId" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">Status ID</span>
        </HeaderTemplate>
    </PropertyColumn>
    <PropertyColumn Property="eventmodel => eventmodel.UserId" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">User ID</span>
        </HeaderTemplate>
    </PropertyColumn>
    <PropertyColumn Property="eventmodel => eventmodel.DateOut" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">Date Out</span>
        </HeaderTemplate>
    </PropertyColumn>
    <PropertyColumn Property="eventmodel => eventmodel.DateIn" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">Date In</span>
        </HeaderTemplate>
    </PropertyColumn>
    <PropertyColumn Property="eventmodel => eventmodel.DateCreated" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">Date Created</span>
        </HeaderTemplate>
    </PropertyColumn>
    <PropertyColumn Property="eventmodel => eventmodel.DateUpdated" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">Date Updated</span>
        </HeaderTemplate>
    </PropertyColumn>
    <PropertyColumn Property="eventmodel => eventmodel.CreatedBy" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">Created By</span>
        </HeaderTemplate>
    </PropertyColumn>
    <PropertyColumn Property="eventmodel => eventmodel.UpdatedBy" Sortable="true">
        <HeaderTemplate>
            <span class="fw-bold">Updated By</span>
        </HeaderTemplate>
    </PropertyColumn>

    <TemplateColumn Context="eventmodel">
        <a href="@($"eventmodels/edit?eventid={eventmodel.EventId}")" class="btn btn-warning btn-sm rounded">Edit</a> |
        <a href="@($"eventmodels/details?eventid={eventmodel.EventId}")" class="btn btn-info btn-sm rounded">Details</a> |
        <a href="@($"eventmodels/delete?eventid={eventmodel.EventId}")" class="btn btn-danger btn-sm rounded">Delete</a>
    </TemplateColumn>
</QuickGrid>

<Paginator State="paginationState" />

@code {
    PaginationState paginationState = new PaginationState { ItemsPerPage = 10 };

    private EventRegistrationApplicationContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}

